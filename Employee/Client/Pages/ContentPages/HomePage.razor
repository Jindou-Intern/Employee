@page "/home/dashboard"



<TableBanner />
<GeneralDepartmentPage />
<DepartmentPage />
<BranchPage />
<CountryPage />
<CityPage />
<TownPage />
<UserPage />
<EmployeePage/>
<DoctorPage/>

<OvertimePage/>
<VacationPage />
<SanctionPage/>

<OvertimeTypePage />
<SanctionTypePage/>
<VacationTypePage/>

<ProfilePage/>


@code {
    [CascadingParameter] public Task<AuthenticationState>? AuthenticationState { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        if (AuthenticationState != null)
        {
            await CheckUserAuthentication();
        }
        else
        {
            Console.WriteLine("AuthenticationState is null");
            NavManager.NavigateTo("/identity/account/login");
        }
    }

    private async Task CheckUserAuthentication()
    {
        var authState = await AuthenticationState;
        var user = authState?.User;

        if (user?.Identity != null && user.Identity.IsAuthenticated)
        {
            Console.WriteLine("User is authenticated.");
            // Thực hiện các hành động khác nếu người dùng đã xác thực
        }
        else
        {
            Console.WriteLine("User is not authenticated or Identity is null.");
            NavManager.NavigateTo("/identity/account/login");
        }
    }
}
